// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace EduApi.Migrations
{
    [DbContext(typeof(EduDbContext))]
    [Migration("20240125215430_¨ChangeKey")]
    partial class ChangeKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Tables.CodeBook.AddressTypeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_AddressType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.AnswerModeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("Cb_AnswerMode");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CountryDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_Country");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CourseLessonItemTemplateDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_CourseLessonItemTemplate");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CourseStatusDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_CourseStatus");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CourseTypeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_CourseType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CultureDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnvironmentCulture")
                        .HasColumnType("bit")
                        .HasColumnName("IsEnvironmentCulture");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_Culture");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.EduEmailDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("EmailBodyHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmailBodyHtml");

                    b.Property<string>("EmailBodyPlainText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmailBodyPlainText");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("From");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsHtml")
                        .HasColumnType("bit")
                        .HasColumnName("IsHtml");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Subject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_Email");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.GalleryItemTypeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_GalleryItemType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.LicenseDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("CreatePrivateCourse")
                        .HasColumnType("bit")
                        .HasColumnName("CreatePrivateCourse");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("MaximumBranch")
                        .HasColumnType("int")
                        .HasColumnName("MaximumBranch");

                    b.Property<int>("MaximumCourse")
                        .HasColumnType("int")
                        .HasColumnName("MaximumCourse");

                    b.Property<int>("MaximumUser")
                        .HasColumnType("int")
                        .HasColumnName("MaximumUser");

                    b.Property<double>("MounthPrice")
                        .HasColumnType("float")
                        .HasColumnName("MounthPrice");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<double>("OneYearSale")
                        .HasColumnType("float")
                        .HasColumnName("OneYearSale");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<bool>("SendCourseInquiry")
                        .HasColumnType("bit")
                        .HasColumnName("SendCourseInquiry");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_License");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.NoteTypeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_NoteType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.NotificationTypeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_NotificationType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.QuestionModeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_QuestionMode");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.SendMessageTypeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_SendMessageType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.TimeTableDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseTermDateFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTermDateToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTermFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTermToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<Guid>("OrganizationStudyHourFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationStudyHourToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_TimeTable");
                });

            modelBuilder.Entity("Model.Tables.Edu.AttendanceStudent.AttendanceStudentDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseStudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTermDateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseStudentId");

                    b.HasIndex("CourseTermDateId");

                    b.HasIndex("CourseTermId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_AttendanceStudent");
                });

            modelBuilder.Entity("Model.Tables.Edu.BankOfQuestions.BankOfQuestionDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("Position");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_BankOfQuestion");
                });

            modelBuilder.Entity("Model.Tables.Edu.BankOfQuestions.BankOfQuestionsTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BankOfQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("BankOfQuestionId");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_BankOfQuestionTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.Branch.BranchDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("City");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HouseNumber");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsMainBranch")
                        .HasColumnType("bit")
                        .HasColumnName("IsMainBranch");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit")
                        .HasColumnName("IsOnline");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Region");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Street");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("WWW")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WWW");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Branch");
                });

            modelBuilder.Entity("Model.Tables.Edu.Branch.BranchTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_BranchTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.Certificate.CertificateDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("CertificateValidTo")
                        .HasColumnType("int")
                        .HasColumnName("CertificateValidTo");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Certificate");
                });

            modelBuilder.Entity("Model.Tables.Edu.Certificate.CertificateTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CertificateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Html");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CertificateTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.Chat.ChatDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseTermId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_Chat");
                });

            modelBuilder.Entity("Model.Tables.Edu.ClassRoom.ClassRoomDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<int>("Floor")
                        .HasColumnType("int")
                        .HasColumnName("Floor");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit")
                        .HasColumnName("IsOnline");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int")
                        .HasColumnName("MaxCapacity");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_ClassRoom");
                });

            modelBuilder.Entity("Model.Tables.Edu.ClassRoom.ClassRoomTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("ClassRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_ClassRoomTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.Course.CourseDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("AutomaticGenerateCertificate")
                        .HasColumnType("bit")
                        .HasColumnName("AutomaticGenerateCertificate");

                    b.Property<Guid>("CertificateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CourseWithLector")
                        .HasColumnType("bit")
                        .HasColumnName("CourseWithLector");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPrivateCourse")
                        .HasColumnType("bit")
                        .HasColumnName("IsPrivateCourse");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("MaximumStudent")
                        .HasColumnType("int")
                        .HasColumnName("MaximumStudent");

                    b.Property<int>("MinimumStudent")
                        .HasColumnType("int")
                        .HasColumnName("MinimumStudent");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Price");

                    b.Property<int>("Sale")
                        .HasColumnType("int")
                        .HasColumnName("Sale");

                    b.Property<bool>("SendEmail")
                        .HasColumnType("bit")
                        .HasColumnName("SendEmail");

                    b.Property<Guid>("SendMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.HasIndex("CourseMaterialId");

                    b.HasIndex("CourseStatusId");

                    b.HasIndex("CourseTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SendMessageId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Course");
                });

            modelBuilder.Entity("Model.Tables.Edu.Course.CourseTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseBrowseDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseLessonItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseLessonItemId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Link_CourseBrowse");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLesson.CourseLessonDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("Position");

                    b.Property<string>("PowerPointFile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PowerPointFile");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseMaterialId");

                    b.HasIndex("CourseTestId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseLesson");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLesson.CourseLessonTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseLessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseLessonId");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseLessonTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLessonItem.CourseLessonItemDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseLessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseLessonItemTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("Position");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("Youtube")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Youtube");

                    b.HasKey("Id");

                    b.HasIndex("CourseLessonId");

                    b.HasIndex("CourseLessonItemTemplateId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseLessonItem");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLessonItem.CourseLessonItemTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseLessonItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Html");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseLessonItemId");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseLessonItemTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseMaterial.CourseMaterialDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseMaterial");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseMaterial.CourseMaterialTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseMaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseMaterialId");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseMaterialTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTerm.CourseTermDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime?>("ActiveFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("ActiveFrom");

                    b.Property<DateTime?>("ActiveTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("ActiveTo");

                    b.Property<Guid>("ClassRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit")
                        .HasColumnName("Friday");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("MaximumStudent")
                        .HasColumnType("int")
                        .HasColumnName("MaximumStudent");

                    b.Property<int>("MinimumStudent")
                        .HasColumnType("int")
                        .HasColumnName("MinimumStudent");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit")
                        .HasColumnName("Monday");

                    b.Property<Guid>("OrganizationStudyHourId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Price");

                    b.Property<DateTime?>("RegistrationFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationFrom");

                    b.Property<DateTime?>("RegistrationTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegistrationTo");

                    b.Property<int>("Sale")
                        .HasColumnType("int")
                        .HasColumnName("Sale");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit")
                        .HasColumnName("Saturday");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit")
                        .HasColumnName("Sunday");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit")
                        .HasColumnName("Thursday");

                    b.Property<Guid>("TimeFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit")
                        .HasColumnName("Tuesday");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit")
                        .HasColumnName("Wednesday");

                    b.HasKey("Id");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("CourseId");

                    b.HasIndex("OrganizationStudyHourId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TimeFromId");

                    b.HasIndex("TimeToId");

                    b.ToTable("Edu_CourseTerm");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTermDate.CourseTermDateDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("ClassRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date");

                    b.Property<string>("DayOfWeek")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DayOfWeek");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit")
                        .HasColumnName("IsCanceled");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid>("TimeFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserInOrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("CourseTermId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TimeFromId");

                    b.HasIndex("TimeToId");

                    b.HasIndex("UserInOrganizationId");

                    b.ToTable("Edu_CourseTermDate");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTest.CourseTestDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<int>("DesiredSuccess")
                        .HasColumnType("int")
                        .HasColumnName("DesiredSuccess");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsRandomGenerateQuestion")
                        .HasColumnType("bit")
                        .HasColumnName("IsRandomGenerateQuestion");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("MaxRepetition")
                        .HasColumnType("int")
                        .HasColumnName("MaxRepetition");

                    b.Property<int>("QuestionCountInTest")
                        .HasColumnType("int")
                        .HasColumnName("QuestionCountInTest");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<int>("TimeLimit")
                        .HasColumnType("int")
                        .HasColumnName("TimeLimit");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseTest");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTestEvaluation.CourseTestEvaluationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseTestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Evaluation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int?>("PointFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PointTo")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseTestId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseTestEvaluation");
                });

            modelBuilder.Entity("Model.Tables.Edu.FileRepository", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileName");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("ObjectOwner")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectOwner");

                    b.Property<string>("OriginalFileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OriginalFileName");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_FileRepository");
                });

            modelBuilder.Entity("Model.Tables.Edu.LinkLifeTime.LinkLifeTimeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_LinkLifeTime");
                });

            modelBuilder.Entity("Model.Tables.Edu.Note.NoteDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<Guid>("FileName")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FileName");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("NoteName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NoteName");

                    b.Property<Guid>("NoteTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Text");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("NoteTypeId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_Note");
                });

            modelBuilder.Entity("Model.Tables.Edu.Notification.NotificationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("AddDate");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit")
                        .HasColumnName("IsNew");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NotificationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectId");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_Notification");
                });

            modelBuilder.Entity("Model.Tables.Edu.Organization.OrganizationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("CanSendCourseInquiry")
                        .HasColumnType("bit")
                        .HasColumnName("CanSendCourseInquiry");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("LicenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationSettingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("WWW")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WWW");

                    b.HasKey("Id");

                    b.HasIndex("LicenseId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.Organization.OrganizationTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_OrganizationTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationAddress.OrganizationAddressDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AddressTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("City");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HouseNumber");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Region");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Street");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_OrganizationAddress");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationCultureDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Link_OrganizationCulture");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRole.OrganizationRoleDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_OrganizationRole");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRole.OrganizationRoleTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganizationRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("OrganizationRoleId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_OrganizationRoleTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRolePermition.OrganizationRolePermitionDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermitionIdentificator")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PermitionIdentificator");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationRoleId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_OrganizationRolePermition");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationSetting.OrganizationSettingDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BackgroundColor");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("ElearningUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ElearningUrl");

                    b.Property<bool>("FacebookLogin")
                        .HasColumnType("bit")
                        .HasColumnName("FacebookLogin");

                    b.Property<string>("GoogleApiToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GoogleApiToken");

                    b.Property<bool>("GoogleLogin")
                        .HasColumnType("bit")
                        .HasColumnName("GoogleLogin");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("LessonLength")
                        .HasColumnType("int")
                        .HasColumnName("LessonLength");

                    b.Property<DateTime>("LicenseChange")
                        .HasColumnType("datetime2")
                        .HasColumnName("LicenseChange");

                    b.Property<Guid>("LicenseOldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LogoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LogoId");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PasswordReset")
                        .HasColumnType("bit")
                        .HasColumnName("PasswordReset");

                    b.Property<bool>("Registration")
                        .HasColumnType("bit")
                        .HasColumnName("Registration");

                    b.Property<string>("SmtpServerPassword")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SmtpServerPassword");

                    b.Property<string>("SmtpServerPort")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SmtpServerPort");

                    b.Property<string>("SmtpServerUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SmtpServerUrl");

                    b.Property<string>("SmtpServerUserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SmtpServerUserName");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<string>("TextColor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TextColor");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<bool>("UseCustomSmtpServer")
                        .HasColumnType("bit")
                        .HasColumnName("UseCustomSmtpServer");

                    b.Property<string>("UserDefaultPassword")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserDefaultPassword");

                    b.HasKey("Id");

                    b.HasIndex("LicenseOldId");

                    b.HasIndex("OrganizationId")
                        .IsUnique();

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_OrganizationSetting");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationStudyHour.OrganizationStudyHourDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("ActiveFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActiveToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("Position");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("ActiveFromId");

                    b.HasIndex("ActiveToId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_OrganizationStudyHour");
                });

            modelBuilder.Entity("Model.Tables.Edu.Person.PersonDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AvatarUrl");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SecondName");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Person");
                });

            modelBuilder.Entity("Model.Tables.Edu.PersonAddress.PersonAddressDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AddressTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("City");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HouseNumber");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Region");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Street");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_PersonAddress");
                });

            modelBuilder.Entity("Model.Tables.Edu.SendMessage.SendMessageDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Reply");

                    b.Property<Guid>("SendMessageTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SendMessageTypeId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_SendMessage");
                });

            modelBuilder.Entity("Model.Tables.Edu.SendMessage.SendMessageTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Html");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("SendMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Subject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("SendMessageId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_SendMessageTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentEvaluation.StudentEvaluationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseStudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("Evaluation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Evaluation");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseStudentId");

                    b.HasIndex("CourseTermId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_StudentEvaluation");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentGroup.StudentGroupDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_StudentGroup");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentGroup.StudentGroupTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_StudentGroupTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentTestSummary.StudentTestSummaryDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<DateTime?>("Finish")
                        .HasColumnType("datetime2")
                        .HasColumnName("Finish");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsAutomaticEvaluate")
                        .HasColumnType("bit")
                        .HasColumnName("IsAutomaticEvaluate");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<double>("Score")
                        .HasColumnType("float")
                        .HasColumnName("Score");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartTime");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<bool>("TestCompleted")
                        .HasColumnType("bit")
                        .HasColumnName("TestCompleted");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseTestId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_StudentTestSummary");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentTestSummaryAnswer.StudentTestSummaryAnswerDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Answer");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FilePath");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<bool>("IsTrueAnswer")
                        .HasColumnType("bit")
                        .HasColumnName("IsTrueAnswer");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("Position");

                    b.Property<Guid?>("StudentTestSummaryQuestionDboId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid>("TestQuestionAnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<bool>("UserAnswer")
                        .HasColumnType("bit")
                        .HasColumnName("UserAnswer");

                    b.Property<bool>("UserAnswerIsCorrect")
                        .HasColumnType("bit")
                        .HasColumnName("UserAnswerIsCorrect");

                    b.Property<string>("UserTestAnswer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserTestAnswer");

                    b.Property<string>("UserTestImageAnswer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserTestImageAnswer");

                    b.HasKey("Id");

                    b.HasIndex("StudentTestSummaryQuestionDboId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TestQuestionAnswerId");

                    b.ToTable("Edu_StudentTestSummaryAnswer");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentTestSummaryQuestion.StudentTestSummaryQuestionDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AnswerModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FilePath");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsAutomaticEvaluate")
                        .HasColumnType("bit")
                        .HasColumnName("IsAutomaticEvaluate");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<bool>("IsTrue")
                        .HasColumnType("bit")
                        .HasColumnName("IsTrue");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("Position");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Question");

                    b.Property<Guid>("QuestionModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int")
                        .HasColumnName("Score");

                    b.Property<Guid>("StudentTestSummaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid>("TestQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("AnswerModeId");

                    b.HasIndex("QuestionModeId");

                    b.HasIndex("StudentTestSummaryId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TestQuestionId");

                    b.ToTable("Edu_StudentTestSummaryQuestion");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestion.TestQuestionDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AnswerModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankOfQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("Position");

                    b.Property<Guid>("QuestionModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("AnswerModeId");

                    b.HasIndex("BankOfQuestionId");

                    b.HasIndex("QuestionModeId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_TestQuestion");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestion.TestQuestionTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Question");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid>("TestQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TestQuestionId");

                    b.ToTable("Edu_TestQuestionTranslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestionAnswerDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<Guid>("FileRepositoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<bool>("IsTrueAnswer")
                        .HasColumnType("bit")
                        .HasColumnName("IsTrueAnswer");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("Position");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid>("TestQuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TestQuestionId");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("FileRepositoryId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TestQuestionId");

                    b.ToTable("Edu_TestQuestionAnswer");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestionAnswerTanslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Answer");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid>("TestQuestionAnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TestQuestionAnswerId");

                    b.ToTable("Edu_TestQuestionAnswerTanslation");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestUserAnswer.TestUserAnswerDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("StudentTestSummaryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid>("TestQuestionAnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TestQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("StudentTestSummaryId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TestQuestionAnswerId");

                    b.HasIndex("TestQuestionId");

                    b.ToTable("Edu_TestUserAnswer");
                });

            modelBuilder.Entity("Model.Tables.Edu.User.UserDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("FacebookId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FacebookId");

                    b.Property<string>("GoogleId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GoogleId");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserEmail");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserPassword");

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserToken");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserEmail")
                        .IsUnique()
                        .HasFilter("[UserEmail] IS NOT NULL");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Edu_User");
                });

            modelBuilder.Entity("Model.Tables.Edu.UserCertificate.UserCertificateDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("ActiveFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("ActiveFrom");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FileName");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("ValidTo");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_UserCertificate");
                });

            modelBuilder.Entity("Model.Tables.Edu.UserRole.UserRoleDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_UserRole");
                });

            modelBuilder.Entity("Model.Tables.Edu.UserRole.UserRoleTranslationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid>("CultureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Edu_UserRoleTranslation");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseLectorDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserInOrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseTermId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserInOrganizationId");

                    b.ToTable("Link_CourseLector");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseStudentDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("CourseFinish")
                        .HasColumnType("bit");

                    b.Property<Guid>("CourseTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserInOrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseTermId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserInOrganizationId");

                    b.ToTable("Link_CourseStudent");
                });

            modelBuilder.Entity("Model.Tables.Link.CouseStudentMaterialDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseLessonItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseLessonItemId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Link_CouseStudentMaterial");
                });

            modelBuilder.Entity("Model.Tables.Link.LinkTestBankOfQuestionDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BankOfQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseTestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("BankOfQuestionId");

                    b.HasIndex("CourseTestId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Link_TestBankOfQuestion");
                });

            modelBuilder.Entity("Model.Tables.Link.StudentInGroupCourseTermDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CourseTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseTermId");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Link_StudentInGroupCourseTerm");
                });

            modelBuilder.Entity("Model.Tables.Link.StudentInGroupDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserInOrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserInOrganizationId");

                    b.ToTable("Link_StudentInGroup");
                });

            modelBuilder.Entity("Model.Tables.Link.UserInOrganizationDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentGroupDboId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OrganizationRoleId");

                    b.HasIndex("StudentGroupDboId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Link_UserInOrganization");
                });

            modelBuilder.Entity("Model.Tables.System.ObjectHistoryDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("ActionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ActionTime");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeletedBy");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("EventType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EventType");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool?>("IsChanged")
                        .HasColumnType("bit")
                        .HasColumnName("IsChanged");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnType("bit")
                        .HasColumnName("IsSystemObject");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectId");

                    b.Property<string>("ObjectType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ObjectType");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OldValue");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SystemIdentificator");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedTime");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("System_ObjectHistory");
                });

            modelBuilder.Entity("Model.Tables.Edu.AttendanceStudent.AttendanceStudentDbo", b =>
                {
                    b.HasOne("Model.Tables.Link.CourseStudentDbo", "CourseStudent")
                        .WithMany("AttendanceStudents")
                        .HasForeignKey("CourseStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseTermDate.CourseTermDateDbo", "CourseTermDate")
                        .WithMany("AttendanceStudents")
                        .HasForeignKey("CourseTermDateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseTerm.CourseTermDbo", "CourseTerm")
                        .WithMany("AttendanceStudents")
                        .HasForeignKey("CourseTermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CourseStudent");

                    b.Navigation("CourseTerm");

                    b.Navigation("CourseTermDate");
                });

            modelBuilder.Entity("Model.Tables.Edu.BankOfQuestions.BankOfQuestionDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("BankOfQuestions")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.BankOfQuestions.BankOfQuestionsTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.BankOfQuestions.BankOfQuestionDbo", "BankOfQuestion")
                        .WithMany("BankOfQuestionsTranslations")
                        .HasForeignKey("BankOfQuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankOfQuestion");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("Model.Tables.Edu.Branch.BranchDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.CountryDbo", "Country")
                        .WithMany("Branchs")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("Branch")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.Branch.BranchTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Branch.BranchDbo", "Branch")
                        .WithMany("BranchTranslations")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("Model.Tables.Edu.Certificate.CertificateDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("Certificates")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.Certificate.CertificateTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Certificate.CertificateDbo", "Certificate")
                        .WithMany("CertificateTranslations")
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("Model.Tables.Edu.Chat.ChatDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseTerm.CourseTermDbo", "CourseTerm")
                        .WithMany("Chats")
                        .HasForeignKey("CourseTermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany("Chats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseTerm");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Edu.ClassRoom.ClassRoomDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Branch.BranchDbo", "Branch")
                        .WithMany("ClassRoom")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Model.Tables.Edu.ClassRoom.ClassRoomTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.ClassRoom.ClassRoomDbo", "ClassRoom")
                        .WithMany("ClassRoomTranslations")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("Model.Tables.Edu.Course.CourseDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Certificate.CertificateDbo", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseMaterial.CourseMaterialDbo", "CourseMaterial")
                        .WithMany("Courses")
                        .HasForeignKey("CourseMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CourseStatusDbo", "CourseStatus")
                        .WithMany("Courses")
                        .HasForeignKey("CourseStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CourseTypeDbo", "CourseType")
                        .WithMany("Courses")
                        .HasForeignKey("CourseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("Course")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.SendMessage.SendMessageDbo", "SendMessage")
                        .WithMany()
                        .HasForeignKey("SendMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("CourseMaterial");

                    b.Navigation("CourseStatus");

                    b.Navigation("CourseType");

                    b.Navigation("Organization");

                    b.Navigation("SendMessage");
                });

            modelBuilder.Entity("Model.Tables.Edu.Course.CourseTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Course.CourseDbo", "Course")
                        .WithMany("CourseTranslations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseBrowseDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Course.CourseDbo", "Course")
                        .WithMany("CourseBrowses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseLessonItem.CourseLessonItemDbo", "CourseLessonItem")
                        .WithMany("CourseBrowses")
                        .HasForeignKey("CourseLessonItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany("CourseBrowses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CourseLessonItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLesson.CourseLessonDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseMaterial.CourseMaterialDbo", "CourseMaterial")
                        .WithMany("CourseLessons")
                        .HasForeignKey("CourseMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseTest.CourseTestDbo", "CourseTest")
                        .WithMany()
                        .HasForeignKey("CourseTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseMaterial");

                    b.Navigation("CourseTest");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLesson.CourseLessonTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseLesson.CourseLessonDbo", "CourseLesson")
                        .WithMany("CourseLessonTranslations")
                        .HasForeignKey("CourseLessonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseLesson");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLessonItem.CourseLessonItemDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseLesson.CourseLessonDbo", "CourseLesson")
                        .WithMany("CourseItem")
                        .HasForeignKey("CourseLessonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CourseLessonItemTemplateDbo", "CourseLessonItemTemplate")
                        .WithMany("CourseLessonItems")
                        .HasForeignKey("CourseLessonItemTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseLesson");

                    b.Navigation("CourseLessonItemTemplate");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLessonItem.CourseLessonItemTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseLessonItem.CourseLessonItemDbo", "CourseLessonItem")
                        .WithMany("CourseLessonItemTranslations")
                        .HasForeignKey("CourseLessonItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseLessonItem");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseMaterial.CourseMaterialDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("CourseMaterials")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseMaterial.CourseMaterialTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseMaterial.CourseMaterialDbo", "CourseMaterial")
                        .WithMany("CourseMaterialTranslation")
                        .HasForeignKey("CourseMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseMaterial");

                    b.Navigation("Culture");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTerm.CourseTermDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.ClassRoom.ClassRoomDbo", "ClassRoom")
                        .WithMany()
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.Course.CourseDbo", "Course")
                        .WithMany("CourseTerm")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.OrganizationStudyHour.OrganizationStudyHourDbo", "OrganizationStudyHour")
                        .WithMany()
                        .HasForeignKey("OrganizationStudyHourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.TimeTableDbo", "TimeFrom")
                        .WithMany("CourseTermFrom")
                        .HasForeignKey("TimeFromId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.TimeTableDbo", "TimeTo")
                        .WithMany("CourseTermTo")
                        .HasForeignKey("TimeToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("Course");

                    b.Navigation("OrganizationStudyHour");

                    b.Navigation("TimeFrom");

                    b.Navigation("TimeTo");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTermDate.CourseTermDateDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.ClassRoom.ClassRoomDbo", "ClassRoom")
                        .WithMany("CourseTermDates")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseTerm.CourseTermDbo", "CourseTerm")
                        .WithMany("CourseTermDate")
                        .HasForeignKey("CourseTermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.TimeTableDbo", "TimeFrom")
                        .WithMany("CourseTermDateFrom")
                        .HasForeignKey("TimeFromId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.TimeTableDbo", "TimeTo")
                        .WithMany("CourseTermDateTo")
                        .HasForeignKey("TimeToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Link.UserInOrganizationDbo", "UserInOrganization")
                        .WithMany()
                        .HasForeignKey("UserInOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("CourseTerm");

                    b.Navigation("TimeFrom");

                    b.Navigation("TimeTo");

                    b.Navigation("UserInOrganization");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTestEvaluation.CourseTestEvaluationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseTest.CourseTestDbo", "CourseTest")
                        .WithMany("CourseTestEvaluations")
                        .HasForeignKey("CourseTestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CourseTest");
                });

            modelBuilder.Entity("Model.Tables.Edu.LinkLifeTime.LinkLifeTimeDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany("LinkLifeTime")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Edu.Note.NoteDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Course.CourseDbo", "Course")
                        .WithMany("Notes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.NoteTypeDbo", "NoteType")
                        .WithMany("NoteDbos")
                        .HasForeignKey("NoteTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("NoteType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Edu.Notification.NotificationDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.NotificationTypeDbo", "NotificationType")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationTypeId");

                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("Notifications")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationType");

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Edu.Organization.OrganizationDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.LicenseDbo", "License")
                        .WithMany("Organizations")
                        .HasForeignKey("LicenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("License");
                });

            modelBuilder.Entity("Model.Tables.Edu.Organization.OrganizationTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("OrganizationTranslations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationAddress.OrganizationAddressDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.AddressTypeDbo", "AddressType")
                        .WithMany()
                        .HasForeignKey("AddressTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CountryDbo", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("Addresses")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AddressType");

                    b.Navigation("Country");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationCultureDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRole.OrganizationRoleTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.OrganizationRole.OrganizationRoleDbo", "OrganizationRole")
                        .WithMany("OrganizationRoleTranslations")
                        .HasForeignKey("OrganizationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("OrganizationRole");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRolePermition.OrganizationRolePermitionDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.OrganizationRole.OrganizationRoleDbo", "OrganizationRole")
                        .WithMany()
                        .HasForeignKey("OrganizationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationRole");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationSetting.OrganizationSettingDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.LicenseDbo", "LicenseOld")
                        .WithMany()
                        .HasForeignKey("LicenseOldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithOne("OrganizationSetting")
                        .HasForeignKey("Model.Tables.Edu.OrganizationSetting.OrganizationSettingDbo", "OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LicenseOld");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationStudyHour.OrganizationStudyHourDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.TimeTableDbo", "ActiveFrom")
                        .WithMany("OrganizationStudyHourFrom")
                        .HasForeignKey("ActiveFromId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.TimeTableDbo", "ActiveTo")
                        .WithMany("OrganizationStudyHourTo")
                        .HasForeignKey("ActiveToId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("OrganizationStudyHours")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActiveFrom");

                    b.Navigation("ActiveTo");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.PersonAddress.PersonAddressDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.AddressTypeDbo", "AddressType")
                        .WithMany("PersonAddresses")
                        .HasForeignKey("AddressTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.CountryDbo", "Country")
                        .WithMany("PersonAddresses")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.Person.PersonDbo", "Person")
                        .WithMany("PersonAddress")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressType");

                    b.Navigation("Country");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Model.Tables.Edu.SendMessage.SendMessageDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("SendMessages")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.SendMessageTypeDbo", "SendMessageType")
                        .WithMany()
                        .HasForeignKey("SendMessageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("SendMessageType");
                });

            modelBuilder.Entity("Model.Tables.Edu.SendMessage.SendMessageTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.SendMessage.SendMessageDbo", "SendMessage")
                        .WithMany("SendMessageTranslations")
                        .HasForeignKey("SendMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("SendMessage");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentEvaluation.StudentEvaluationDbo", b =>
                {
                    b.HasOne("Model.Tables.Link.CourseStudentDbo", "CourseStudent")
                        .WithMany()
                        .HasForeignKey("CourseStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseTerm.CourseTermDbo", "CourseTerm")
                        .WithMany()
                        .HasForeignKey("CourseTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseStudent");

                    b.Navigation("CourseTerm");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentGroup.StudentGroupDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("StudentGroups")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentGroup.StudentGroupTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.StudentGroup.StudentGroupDbo", "StudentGroup")
                        .WithMany("StudentGroupTranslations")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentTestSummary.StudentTestSummaryDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Course.CourseDbo", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseTest.CourseTestDbo", "CourseTest")
                        .WithMany()
                        .HasForeignKey("CourseTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CourseTest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentTestSummaryAnswer.StudentTestSummaryAnswerDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.StudentTestSummaryQuestion.StudentTestSummaryQuestionDbo", null)
                        .WithMany("StudentTestSummaryAnswers")
                        .HasForeignKey("StudentTestSummaryQuestionDboId");

                    b.HasOne("Model.Tables.Edu.TestQuestionAnswerDbo", "TestQuestionAnswer")
                        .WithMany()
                        .HasForeignKey("TestQuestionAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestQuestionAnswer");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentTestSummaryQuestion.StudentTestSummaryQuestionDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.AnswerModeDbo", "AnswerMode")
                        .WithMany()
                        .HasForeignKey("AnswerModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.QuestionModeDbo", "QuestionMode")
                        .WithMany()
                        .HasForeignKey("QuestionModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.StudentTestSummary.StudentTestSummaryDbo", "StudentTestSummary")
                        .WithMany()
                        .HasForeignKey("StudentTestSummaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.TestQuestion.TestQuestionDbo", "TestQuestion")
                        .WithMany("StudentTestSummaryQuestions")
                        .HasForeignKey("TestQuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AnswerMode");

                    b.Navigation("QuestionMode");

                    b.Navigation("StudentTestSummary");

                    b.Navigation("TestQuestion");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestion.TestQuestionDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.AnswerModeDbo", "AnswerMode")
                        .WithMany()
                        .HasForeignKey("AnswerModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.BankOfQuestions.BankOfQuestionDbo", "BankOfQuestion")
                        .WithMany("TestQuestions")
                        .HasForeignKey("BankOfQuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.CodeBook.QuestionModeDbo", "QuestionMode")
                        .WithMany()
                        .HasForeignKey("QuestionModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnswerMode");

                    b.Navigation("BankOfQuestion");

                    b.Navigation("QuestionMode");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestion.TestQuestionTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.TestQuestion.TestQuestionDbo", "TestQuestion")
                        .WithMany("TestQuestionTranslation")
                        .HasForeignKey("TestQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("TestQuestion");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestionAnswerDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.FileRepository", "FileRepository")
                        .WithMany()
                        .HasForeignKey("FileRepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.TestQuestion.TestQuestionDbo", "TestQuestion")
                        .WithMany("TestQuestionAnswer")
                        .HasForeignKey("TestQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileRepository");

                    b.Navigation("TestQuestion");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestionAnswerTanslationDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.TestQuestionAnswerDbo", "TestQuestionAnswer")
                        .WithMany("TestQuestionAnswerTranslations")
                        .HasForeignKey("TestQuestionAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("TestQuestionAnswer");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestUserAnswer.TestUserAnswerDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.StudentTestSummary.StudentTestSummaryDbo", "StudentTestSummary")
                        .WithMany()
                        .HasForeignKey("StudentTestSummaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.TestQuestionAnswerDbo", "TestQuestionAnswer")
                        .WithMany("TestUserAnswers")
                        .HasForeignKey("TestQuestionAnswerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.TestQuestion.TestQuestionDbo", "TestQuestion")
                        .WithMany("TestUserAnswers")
                        .HasForeignKey("TestQuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StudentTestSummary");

                    b.Navigation("TestQuestion");

                    b.Navigation("TestQuestionAnswer");
                });

            modelBuilder.Entity("Model.Tables.Edu.User.UserDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Person.PersonDbo", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.UserRole.UserRoleDbo", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Model.Tables.Edu.UserCertificate.UserCertificateDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany("UserCertificates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Edu.UserRole.UserRoleTranslationDbo", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.CultureDbo", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.UserRole.UserRoleDbo", "UserRole")
                        .WithMany("UserRoleTranslation")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseLectorDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseTerm.CourseTermDbo", "CourseTerm")
                        .WithMany("CourseLectors")
                        .HasForeignKey("CourseTermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Link.UserInOrganizationDbo", "UserInOrganization")
                        .WithMany("CourseLectors")
                        .HasForeignKey("UserInOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseTerm");

                    b.Navigation("UserInOrganization");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseStudentDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseTerm.CourseTermDbo", "CourseTerm")
                        .WithMany("CourseStudents")
                        .HasForeignKey("CourseTermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Link.UserInOrganizationDbo", "UserInOrganization")
                        .WithMany("CourseStudents")
                        .HasForeignKey("UserInOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseTerm");

                    b.Navigation("UserInOrganization");
                });

            modelBuilder.Entity("Model.Tables.Link.CouseStudentMaterialDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Course.CourseDbo", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseLessonItem.CourseLessonItemDbo", "CourseLessonItem")
                        .WithMany("CouseStudentMaterials")
                        .HasForeignKey("CourseLessonItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany("CouseStudentMaterials")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("CourseLessonItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.Link.LinkTestBankOfQuestionDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.BankOfQuestions.BankOfQuestionDbo", "BankOfQuestion")
                        .WithMany()
                        .HasForeignKey("BankOfQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.CourseTest.CourseTestDbo", "CourseTest")
                        .WithMany()
                        .HasForeignKey("CourseTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankOfQuestion");

                    b.Navigation("CourseTest");
                });

            modelBuilder.Entity("Model.Tables.Link.StudentInGroupCourseTermDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseTerm.CourseTermDbo", "CourseTerm")
                        .WithMany("StudentInGroupCourseTerms")
                        .HasForeignKey("CourseTermId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.StudentGroup.StudentGroupDbo", "StudentGroup")
                        .WithMany("StudentInGroupCourseTerms")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseTerm");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("Model.Tables.Link.StudentInGroupDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.StudentGroup.StudentGroupDbo", "StudentGroup")
                        .WithMany()
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Link.UserInOrganizationDbo", "UserInOrganization")
                        .WithMany("StudentInGroups")
                        .HasForeignKey("UserInOrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StudentGroup");

                    b.Navigation("UserInOrganization");
                });

            modelBuilder.Entity("Model.Tables.Link.UserInOrganizationDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.Organization.OrganizationDbo", "Organization")
                        .WithMany("UserInOrganizations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.OrganizationRole.OrganizationRoleDbo", "OrganizationRole")
                        .WithMany("UserInOrganizations")
                        .HasForeignKey("OrganizationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Tables.Edu.StudentGroup.StudentGroupDbo", null)
                        .WithMany("UserInOrganization")
                        .HasForeignKey("StudentGroupDboId");

                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany("UserInOrganizations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("OrganizationRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.System.ObjectHistoryDbo", b =>
                {
                    b.HasOne("Model.Tables.Edu.User.UserDbo", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.AddressTypeDbo", b =>
                {
                    b.Navigation("PersonAddresses");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CountryDbo", b =>
                {
                    b.Navigation("Branchs");

                    b.Navigation("PersonAddresses");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CourseLessonItemTemplateDbo", b =>
                {
                    b.Navigation("CourseLessonItems");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CourseStatusDbo", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CourseTypeDbo", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.LicenseDbo", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.NoteTypeDbo", b =>
                {
                    b.Navigation("NoteDbos");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.NotificationTypeDbo", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.TimeTableDbo", b =>
                {
                    b.Navigation("CourseTermDateFrom");

                    b.Navigation("CourseTermDateTo");

                    b.Navigation("CourseTermFrom");

                    b.Navigation("CourseTermTo");

                    b.Navigation("OrganizationStudyHourFrom");

                    b.Navigation("OrganizationStudyHourTo");
                });

            modelBuilder.Entity("Model.Tables.Edu.BankOfQuestions.BankOfQuestionDbo", b =>
                {
                    b.Navigation("BankOfQuestionsTranslations");

                    b.Navigation("TestQuestions");
                });

            modelBuilder.Entity("Model.Tables.Edu.Branch.BranchDbo", b =>
                {
                    b.Navigation("BranchTranslations");

                    b.Navigation("ClassRoom");
                });

            modelBuilder.Entity("Model.Tables.Edu.Certificate.CertificateDbo", b =>
                {
                    b.Navigation("CertificateTranslations");
                });

            modelBuilder.Entity("Model.Tables.Edu.ClassRoom.ClassRoomDbo", b =>
                {
                    b.Navigation("ClassRoomTranslations");

                    b.Navigation("CourseTermDates");
                });

            modelBuilder.Entity("Model.Tables.Edu.Course.CourseDbo", b =>
                {
                    b.Navigation("CourseBrowses");

                    b.Navigation("CourseTerm");

                    b.Navigation("CourseTranslations");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLesson.CourseLessonDbo", b =>
                {
                    b.Navigation("CourseItem");

                    b.Navigation("CourseLessonTranslations");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLessonItem.CourseLessonItemDbo", b =>
                {
                    b.Navigation("CourseBrowses");

                    b.Navigation("CourseLessonItemTranslations");

                    b.Navigation("CouseStudentMaterials");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseMaterial.CourseMaterialDbo", b =>
                {
                    b.Navigation("CourseLessons");

                    b.Navigation("CourseMaterialTranslation");

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTerm.CourseTermDbo", b =>
                {
                    b.Navigation("AttendanceStudents");

                    b.Navigation("CourseLectors");

                    b.Navigation("CourseStudents");

                    b.Navigation("CourseTermDate");

                    b.Navigation("Chats");

                    b.Navigation("StudentInGroupCourseTerms");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTermDate.CourseTermDateDbo", b =>
                {
                    b.Navigation("AttendanceStudents");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTest.CourseTestDbo", b =>
                {
                    b.Navigation("CourseTestEvaluations");
                });

            modelBuilder.Entity("Model.Tables.Edu.Organization.OrganizationDbo", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("BankOfQuestions");

                    b.Navigation("Branch");

                    b.Navigation("Certificates");

                    b.Navigation("Course");

                    b.Navigation("CourseMaterials");

                    b.Navigation("Notifications");

                    b.Navigation("OrganizationSetting");

                    b.Navigation("OrganizationStudyHours");

                    b.Navigation("OrganizationTranslations");

                    b.Navigation("SendMessages");

                    b.Navigation("StudentGroups");

                    b.Navigation("UserInOrganizations");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRole.OrganizationRoleDbo", b =>
                {
                    b.Navigation("OrganizationRoleTranslations");

                    b.Navigation("UserInOrganizations");
                });

            modelBuilder.Entity("Model.Tables.Edu.Person.PersonDbo", b =>
                {
                    b.Navigation("PersonAddress");
                });

            modelBuilder.Entity("Model.Tables.Edu.SendMessage.SendMessageDbo", b =>
                {
                    b.Navigation("SendMessageTranslations");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentGroup.StudentGroupDbo", b =>
                {
                    b.Navigation("StudentGroupTranslations");

                    b.Navigation("StudentInGroupCourseTerms");

                    b.Navigation("UserInOrganization");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentTestSummaryQuestion.StudentTestSummaryQuestionDbo", b =>
                {
                    b.Navigation("StudentTestSummaryAnswers");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestion.TestQuestionDbo", b =>
                {
                    b.Navigation("StudentTestSummaryQuestions");

                    b.Navigation("TestQuestionAnswer");

                    b.Navigation("TestQuestionTranslation");

                    b.Navigation("TestUserAnswers");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestionAnswerDbo", b =>
                {
                    b.Navigation("TestQuestionAnswerTranslations");

                    b.Navigation("TestUserAnswers");
                });

            modelBuilder.Entity("Model.Tables.Edu.User.UserDbo", b =>
                {
                    b.Navigation("CourseBrowses");

                    b.Navigation("CouseStudentMaterials");

                    b.Navigation("Chats");

                    b.Navigation("LinkLifeTime");

                    b.Navigation("Notes");

                    b.Navigation("Notifications");

                    b.Navigation("UserCertificates");

                    b.Navigation("UserInOrganizations");
                });

            modelBuilder.Entity("Model.Tables.Edu.UserRole.UserRoleDbo", b =>
                {
                    b.Navigation("UserRoleTranslation");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseStudentDbo", b =>
                {
                    b.Navigation("AttendanceStudents");
                });

            modelBuilder.Entity("Model.Tables.Link.UserInOrganizationDbo", b =>
                {
                    b.Navigation("CourseLectors");

                    b.Navigation("CourseStudents");

                    b.Navigation("StudentInGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
